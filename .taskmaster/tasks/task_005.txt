# Task ID: 5
# Title: Set up Database and Prisma Schema
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Configure PostgreSQL database and define Prisma schema with email verification tracking
# Details:
Set up PostgreSQL database, design and implement Prisma schema for User, Session, Account models, and email verification tracking. Include models for 2FA/WebAuthn support as required by better-auth.

# Test Strategy:
Run database migrations successfully and verify that all required tables and relationships are created correctly.

# Subtasks:
## 1. Provision PostgreSQL Database and Configure DATABASE_URL [pending]
### Dependencies: None
### Description: Deploy a PostgreSQL instance and configure the DATABASE_URL environment variable.
### Details:
• Choose deployment method (Docker, cloud provider, etc.)
• Obtain connection string
• Add DATABASE_URL to .env or environment configuration

## 2. Define User, Session, and Account Models in schema.prisma [pending]
### Dependencies: 5.1
### Description: Add core authentication models to schema.prisma to support user accounts and sessions.
### Details:
• Define User model with id, email, name, password, etc.
• Define Session model with sessionToken, userId, expires
• Define Account model for OAuth providers with provider, providerAccountId, userId

## 3. Add Email Verification and 2FA/WebAuthn Models [pending]
### Dependencies: 5.2
### Description: Extend schema.prisma with models and fields to support email verification and 2FA/WebAuthn.
### Details:
• Add EmailVerification model with token, userId, expires
• Add WebAuthnCredential model with id, userId, publicKey, counter
• Add fields like totpSecret and recoveryCodes to User model

## 4. Run prisma migrate dev and Generate Prisma Client [pending]
### Dependencies: 5.3
### Description: Execute migrations to apply the schema changes and generate the Prisma Client.
### Details:
• Run `npx prisma migrate dev --name init-auth`
• Run `npx prisma generate`
• Verify tables and client generation

